openapi: 3.0.0
info:
  title: 'API COMPRAS'
  version: '1.0'
paths:
  /api/news/all:
    get:
      tags:
        - Notícias
      summary: 'Retorna todas as notícias cadastradas disponíveis'
      description: 'Em caso de sucesso e se houver notícias cadastradas disponíveis, essa API as retorna.'
      operationId: getAllAvailable
      responses:
        '200':
          description: 'Sucesso na operação, mesmo que não seja encontrada correspondência entre parâmetro de busca e notícia disponível.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  data: { oneOf: [{ type: array, items: { properties: { id: { type: integer, example: 1 }, title: { type: string, maxLength: 100, example: 'Título da notícia' }, summary: { type: string, maxLength: 250, example: 'Resumo da notícia' }, image: { type: string, example: 'https://compras/image/news/default-image-path.svg' }, date: { type: string, format: date-time, example: '2024-08-12T14:00:00Z' }, category: { type: string, example: Notícias } }, type: object } }, { type: string, example: '' }] }
                  message: { type: string, example: 'Notícias correspondentes à busca carregadas com sucesso.' }
                type: object
        '401':
          description: 'Acesso negado. Ocorre se a requisição for originada de um servidor não autorizado.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  data: { type: string, example: '' }
                  message: { type: string, example: 'Acesso negado.' }
                type: object
        '503':
          description: 'Serviço indisponível ou erro ao carregar notícias. Ocorre em caso de falha na conexão com o banco de dados ou na execução de uma consulta.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  data: { type: string, example: '' }
                  message: { type: string, example: 'Serviço indisponível.' }
                type: object
  /api/news/highlighted:
    get:
      tags:
        - Notícias
      summary: 'Retorna todas as notícias em destaque disponíveis'
      description: 'Essa API retorna uma lista de todas as notícias em destaque disponíveis.'
      operationId: getHighlightedAvailable
      responses:
        '200':
          description: 'Sucesso na operação, mesmo que ainda não haja notícias em destaque cadastradas ou disponíveis.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  data: { type: array, items: { properties: { id: { type: integer, example: 1 }, title: { type: string, maxLength: 100, example: 'Título da notícia' }, summary: { type: string, maxLength: 250, example: 'Resumo da notícia' }, image: { type: string, example: 'https://compras/image/news/default-image-path.svg' }, date: { type: string, format: date-time, example: '12/08/2024 14:00:00' }, category: { type: string, example: Destaques } }, type: object } }
                  message: { type: string, example: 'Notícias em destaque carregadas com sucesso.' }
                type: object
        '401':
          description: 'Acesso negado. Ocorre se a requisição for originada de um servidor não autorizado.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  data: { type: string, example: '' }
                  message: { type: string, example: 'Acesso negado.' }
                type: object
        '503':
          description: 'Serviço indisponível ou erro ao carregar notícias. Ocorre em caso de falha na conexão com o banco de dados ou na execução de uma consulta.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  data: { type: string, example: '' }
                  message: { type: string, example: 'Serviço indisponível.' }
                type: object
  /api/news/regular:
    get:
      tags:
        - Notícias
      summary: 'Retorna todas as notícias regulares disponíveis'
      description: 'Essa API retorna uma lista de todas as notícias regulares disponíveis.'
      operationId: getRegularAvailable
      responses:
        '200':
          description: 'Sucesso na operação, mesmo que ainda não haja notícias regulares cadastradas ou disponíveis.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  data: { type: array, items: { properties: { id: { type: integer, example: 1 }, title: { type: string, maxLength: 100, example: 'Título da notícia' }, summary: { type: string, maxLength: 250, example: 'Resumo da notícia' }, image: { type: string, example: 'https://compras/image/news/default-image-path.svg' }, date: { type: string, format: date-time, example: '12/08/2024 14:00:00' }, category: { type: string, example: Notícias } }, type: object } }
                  message: { type: string, example: 'Notícias regulares carregadas com sucesso.' }
                type: object
        '401':
          description: 'Acesso negado. Ocorre se a requisição for originada de um servidor não autorizado.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  data: { type: string, example: '' }
                  message: { type: string, example: 'Acesso negado.' }
                type: object
        '503':
          description: 'Serviço indisponível ou erro ao carregar notícias. Ocorre em caso de falha na conexão com o banco de dados ou na execução de uma consulta.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  data: { type: string, example: '' }
                  message: { type: string, example: 'Serviço indisponível.' }
                type: object
  '/api/news/info/{id}':
    get:
      tags:
        - Notícias
      summary: 'Retorna as informações de uma notícia específica disponível'
      description: 'Essa API retorna as informações de uma notícia específica, de acordo com o ID.'
      operationId: getInfoAvailable
      parameters:
        -
          name: id
          in: path
          description: 'ID da notícia. Necessário que seja numérico.'
          required: true
          schema:
            type: string
          example: '10'
      responses:
        '200':
          description: 'Notícia carregada com sucesso.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: true }
                  data: { properties: { id: { description: 'Identificador da notícia.', type: integer, example: 1 }, title: { description: 'Título da notícia.', type: string, maxLength: 100, example: 'Título da notícia A' }, summary: { description: 'Resumo da notícia.', type: string, maxLength: 250, example: 'Resumo da notícia A' }, image: { description: 'Imagem principal da notícia.', type: string, example: 'https://compras/image/news/default-image-path.svg' }, date: { description: 'Data de publicação da notícia.', type: string, format: date-time, example: '2024-08-12T14:00:00' }, category: { description: 'Categoria da notícia.', type: string, example: Notícias } }, type: object }
                  message: { type: string, example: 'Notícia carregada com sucesso.' }
                type: object
        '400':
          description: 'Parâmetro de notícia inválido ou não informado. Ocorre se ID enviado como parâmetro for não numérico ou vazio.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  data: { type: string, example: '' }
                  message: { type: string, example: 'Parâmetro de notícia inválido ou não informado.' }
                type: object
        '404':
          description: 'Notícia não está disponível. Ocorre quando ID enviado como parâmetro não corresponde a uma notícia disponível.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  data: { type: string, example: '' }
                  message: { type: string, example: 'Notícia não está disponível.' }
                type: object
        '401':
          description: 'Acesso negado. Ocorre se a requisição for originada de um servidor não autorizado.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  data: { type: string, example: '' }
                  message: { type: string, example: 'Acesso negado.' }
                type: object
        '503':
          description: 'Serviço indisponível ou erro ao carregar notícia. Ocorre em caso de falha na conexão com o banco de dados ou na execução de uma consulta.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  data: { type: string, example: '' }
                  message: { type: string, example: 'Serviço indisponível.' }
                type: object
  '/api/news/search/{searched}':
    get:
      tags:
        - Notícias
      summary: 'Retorna todas as notícias disponíveis correspondentes à busca'
      description: 'Essa API retorna uma lista de todas as notícias disponíveis correspondentes à busca.'
      operationId: search
      parameters:
        -
          name: searched
          in: path
          description: 'Parâmetro de busca. Pode ser um fragmento do título, do resumo ou da data de publicação da notícia'
          required: true
          schema:
            type: string
          example: 'Título da notícia B'
      responses:
        '200':
          description: 'Sucesso na operação, mesmo que não seja encontrada correspondência entre parâmetro de busca e notícia disponível.'
          content:
            application/json:
              schema:
                properties:
                  success: { description: 'Booleano que indica se houve ou não sucesso na operação.', type: boolean, example: true }
                  data: { oneOf: [{ description: 'Array de objetos com as informações das notícias se houver alguma.', type: array, items: { properties: { id: { description: 'Identificador da notícia.', type: integer, example: 1 }, title: { description: 'Título da notícia.', type: string, maxLength: 100, example: 'Título da notícia A' }, summary: { description: 'Resumo da notícia.', type: string, maxLength: 250, example: 'Resumo da notícia A' }, image: { description: 'Imagem principal da notícia.', type: string, example: 'https://compras/image/news/default-image-path.svg' }, date: { description: 'Data de publicação da notícia.', type: string, format: date-time, example: '2024-08-12T14:00:00' }, category: { description: 'Categoria da notícia.', type: string, example: Notícias } }, type: object } }, { description: 'String vazia se não houver notícias cadastradas ou disponíveis', type: string, example: '' }] }
                  message: { type: string, example: 'Notícias correspondentes à busca carregadas com successo.' }
                type: object
        '400':
          description: 'Parâmetro de busca inválido ou não informado. Ocorre quando o parâmetro de busca for vazio.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  data: { type: string, example: '' }
                  message: { type: string, example: 'Parâmetro de busca inválido ou não informado.' }
                type: object
        '401':
          description: 'Acesso negado. Ocorre se a requisição for originada de um servidor não autorizado.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  data: { type: string, example: '' }
                  message: { type: string, example: 'Acesso negado.' }
                type: object
        '503':
          description: 'Serviço indisponível ou erro ao carregar notícias. Ocorre em caso de falha na conexão com o banco de dados ou na execução de uma consulta.'
          content:
            application/json:
              schema:
                properties:
                  success: { type: boolean, example: false }
                  data: { type: string, example: '' }
                  message: { type: string, example: 'Serviço indisponível.' }
                type: object
tags:
  -
    name: Notícias
    description: Notícias
